{
  "contractName": "XBOTTreasury",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DeFiXBot/XBOTTreasury.sol\":\"XBOTTreasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/DeFiXBot/XBOTTreasury.sol\":{\"keccak256\":\"0x141e80c4ae3076e16d894eaed4c55a7b3bb4c01555bd2debda31a231e135639a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://880d00a2cb9c3e733742be61990f6fd961572ae6336c42a78098f9db9fb86ef5\",\"dweb:/ipfs/QmQ2FtoGGfxNKThXnTdbiZeDSEiFaormhzs6aficAaVrGc\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102a38061007e6000396000f3fe6080604052600436106100405760003560e01c80633ccfd60b14610049578063715018a61461005e5780638da5cb5b14610073578063f2fde38b1461009f57005b3661004757005b005b34801561005557600080fd5b506100476100bf565b34801561006a57600080fd5b50610047610104565b34801561007f57600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100ab57600080fd5b506100476100ba36600461023d565b610118565b6100c7610193565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610101573d6000803e3d6000fd5b50565b61010c610193565b61011660006101ed565b565b610120610193565b6001600160a01b03811661018a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610101816101ed565b6000546001600160a01b031633146101165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610181565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561024f57600080fd5b81356001600160a01b038116811461026657600080fd5b939250505056fea26469706673582212200b5bbc49c573e351d9215f20e78bdc4f4236857f915550c7ae141aa3270e649d64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100405760003560e01c80633ccfd60b14610049578063715018a61461005e5780638da5cb5b14610073578063f2fde38b1461009f57005b3661004757005b005b34801561005557600080fd5b506100476100bf565b34801561006a57600080fd5b50610047610104565b34801561007f57600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100ab57600080fd5b506100476100ba36600461023d565b610118565b6100c7610193565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610101573d6000803e3d6000fd5b50565b61010c610193565b61011660006101ed565b565b610120610193565b6001600160a01b03811661018a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610101816101ed565b6000546001600160a01b031633146101165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610181565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561024f57600080fd5b81356001600160a01b038116811461026657600080fd5b939250505056fea26469706673582212200b5bbc49c573e351d9215f20e78bdc4f4236857f915550c7ae141aa3270e649d64736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1278:43",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:43",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:43"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:43",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:43",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:43"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:43"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:43",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:43"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:43",
                "type": ""
              }
            ],
            "src": "14:203:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "292:216:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "338:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "347:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "350:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "340:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "340:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "340:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "313:7:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "322:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "309:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "309:23:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "305:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "305:32:43"
                  },
                  "nodeType": "YulIf",
                  "src": "302:52:43"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "363:36:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "389:9:43"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "376:12:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:23:43"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "367:5:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "462:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "471:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "474:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "464:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "464:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "464:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "421:5:43"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "432:5:43"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "447:3:43",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "452:1:43",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "443:3:43"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "443:11:43"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "456:1:43",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "439:3:43"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "439:19:43"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "428:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "428:31:43"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "418:2:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "418:42:43"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "411:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "411:50:43"
                  },
                  "nodeType": "YulIf",
                  "src": "408:70:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "487:15:43",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "497:5:43"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "487:6:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "258:9:43",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "269:7:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "281:6:43",
                "type": ""
              }
            ],
            "src": "222:286:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "687:228:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "704:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "715:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "697:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "697:21:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "697:21:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "738:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "749:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "734:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "734:18:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "754:2:43",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "727:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:30:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "727:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "777:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "788:2:43",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:18:43"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "793:34:43",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "766:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:62:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "766:62:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "848:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "859:2:43",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "844:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "844:18:43"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "864:8:43",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "837:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "837:36:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "837:36:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "882:27:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "894:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "905:3:43",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "890:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "890:19:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "882:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "664:9:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "678:4:43",
                "type": ""
              }
            ],
            "src": "513:402:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1094:182:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1111:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1122:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1104:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1104:21:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1104:21:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1145:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1156:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1141:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1141:18:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1161:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1134:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:30:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1134:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1184:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1195:2:43",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1180:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1180:18:43"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1200:34:43",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1173:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1173:62:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1173:62:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1244:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1256:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1267:2:43",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1252:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1252:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1244:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1071:9:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1085:4:43",
                "type": ""
              }
            ],
            "src": "920:356:43"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 43,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "113:229:35:-:0;;;;;;;;;;;;-1:-1:-1;936:32:2;719:10:13;936:18:2;:32::i;:::-;113:229:35;;2426:187:2;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:2;;;-1:-1:-1;;;;;;2534:17:2;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;113:229:35:-;;;;;;;",
  "deployedSourceMap": "113:229:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:102;;;;;;;;;;;;;:::i;1824:101:2:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:2;1273:6;1201:85;;;-1:-1:-1;;;;;1273:6:2;;;160:51:43;;1201:85:2;;;;;148:2:43;1201:85:2;;;2074:198;;;;;;;;;;-1:-1:-1;2074:198:2;;;;;:::i;:::-;;:::i;238:102:35:-;1094:13:2;:11;:13::i;:::-;1247:7;1273:6;;285:48:35::1;::::0;-1:-1:-1;;;;;1273:6:2;;;;311:21:35::1;285:48:::0;::::1;;;::::0;311:21;;285:48;1247:7:2;285:48:35;311:21;1273:6:2;285:48:35;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;238:102::o:0;1824:101:2:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2074:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:2;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:2;;715:2:43;2154:73:2::1;::::0;::::1;697:21:43::0;754:2;734:18;;;727:30;793:34;773:18;;;766:62;-1:-1:-1;;;844:18:43;;;837:36;890:19;;2154:73:2::1;;;;;;;;;2237:28;2256:8;2237:18;:28::i;1359:130::-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:2;719:10:13;1422:23:2;1414:68;;;;-1:-1:-1;;;1414:68:2;;1122:2:43;1414:68:2;;;1104:21:43;;;1141:18;;;1134:30;1200:34;1180:18;;;1173:62;1252:18;;1414:68:2;920:356:43;2426:187:2;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:2;;;-1:-1:-1;;;;;;2534:17:2;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;222:286:43:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:43;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:43:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.12;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract XBOTTreasury is Ownable {\n    receive() external payable  {    \n    }\n\n    fallback() external payable {\n    }\n\n    function withdraw() public onlyOwner {\n        payable(owner()).transfer(address(this).balance);\n    }\n}\n",
  "sourcePath": "/Applications/projects/breezy-contracts/contracts/DeFiXBot/XBOTTreasury.sol",
  "ast": {
    "absolutePath": "project:/contracts/DeFiXBot/XBOTTreasury.sol",
    "exportedSymbols": {
      "Context": [
        2551
      ],
      "Ownable": [
        501
      ],
      "XBOTTreasury": [
        10975
      ]
    },
    "id": 10976,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10944,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:25:35"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 10945,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10976,
        "sourceUnit": 502,
        "src": "59:52:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10946,
              "name": "Ownable",
              "nameLocations": [
                "138:7:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 501,
              "src": "138:7:35"
            },
            "id": 10947,
            "nodeType": "InheritanceSpecifier",
            "src": "138:7:35"
          }
        ],
        "canonicalName": "XBOTTreasury",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10975,
        "linearizedBaseContracts": [
          10975,
          501,
          2551
        ],
        "name": "XBOTTreasury",
        "nameLocation": "122:12:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10950,
              "nodeType": "Block",
              "src": "180:11:35",
              "statements": []
            },
            "id": 10951,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "159:2:35"
            },
            "returnParameters": {
              "id": 10949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "180:0:35"
            },
            "scope": 10975,
            "src": "152:39:35",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10954,
              "nodeType": "Block",
              "src": "225:7:35",
              "statements": []
            },
            "id": 10955,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "205:2:35"
            },
            "returnParameters": {
              "id": 10953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "225:0:35"
            },
            "scope": 10975,
            "src": "197:35:35",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10973,
              "nodeType": "Block",
              "src": "275:65:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10968,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "319:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_XBOTTreasury_$10975",
                                "typeString": "contract XBOTTreasury"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_XBOTTreasury_$10975",
                                "typeString": "contract XBOTTreasury"
                              }
                            ],
                            "id": 10967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "311:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10966,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "311:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "311:13:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "325:7:35",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "311:21:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 10962,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "293:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 10963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "293:7:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "285:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 10960,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "285:8:35",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "285:16:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 10965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "302:8:35",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "285:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "285:48:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10972,
                  "nodeType": "ExpressionStatement",
                  "src": "285:48:35"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 10974,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10958,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10957,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "265:9:35"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "265:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "265:9:35"
              }
            ],
            "name": "withdraw",
            "nameLocation": "247:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "255:2:35"
            },
            "returnParameters": {
              "id": 10959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "275:0:35"
            },
            "scope": 10975,
            "src": "238:102:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10976,
        "src": "113:229:35",
        "usedErrors": []
      }
    ],
    "src": "32:311:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "8453": {
      "events": {},
      "links": {},
      "address": "0xE3F88AA855C3fb6ca04eF6bAbdE465F5883Da3F9",
      "transactionHash": "0x79c9cc215ee2d47cbab042ef4e0df346ff28c27caf64ee261b3e3de4cabd2484"
    },
    "11155111": {
      "events": {},
      "links": {},
      "address": "0xF05Cdf380CcD6b521B691BDd171db7Ba22213387",
      "transactionHash": "0x74883c3641b3cdaeb9ca2e174718e76d2b7d8b3bd5f9fd04e4bb7fb8642e211d"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-10-09T13:59:09.924Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}